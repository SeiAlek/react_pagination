{"version":3,"sources":["Components/Pagination/PaginationButton.js","Components/Pagination/Pagination.js","Components/Pagination/PaginationSettings.js","App.js","index.js"],"names":["PaginationItem","page","activePage","text","onPageChange","className","cn","active","pagination__arrow","type","onClick","defaultProps","Pagination","state","this","props","total","perPage","lastPage","Math","ceil","PaginationButton","React","Component","perPageOptions","PaginationSettings","value","handlePerPageQty","onChange","e","target","map","option","key","pages","Array","fill","i","App","length","setPage","setState","newPage","firstVisibleIndex","slice","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3a0508b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nconst PaginationItem = ({ page, activePage, text, onPageChange }) => (\n  <li className={\n    cn('page-item', {\n      active: page === activePage,\n      pagination__arrow: text,\n    })}\n  >\n    <button\n      type=\"button\"\n      className=\"page-link\"\n      onClick={() => onPageChange(page)}\n    >\n      {text || page}\n    </button>\n  </li>\n);\n\nPaginationItem.defaultProps = {\n  text: '',\n};\n\nPaginationItem.propTypes = {\n  page: PropTypes.number.isRequired,\n  activePage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  text: PropTypes.string,\n};\n\nexport default PaginationItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PaginationButton from './PaginationButton';\nimport './Pagination.css';\n\nclass Pagination extends React.Component {\n  state = {};\n\n  render() {\n    const { total, perPage, page, onPageChange } = this.props;\n    const lastPage = Math.ceil(total / perPage);\n\n    return (\n      <nav>\n        <ul className=\"pagination\">\n          <PaginationButton\n            page={page - 1}\n            activePage={page}\n            onPageChange={onPageChange}\n            text=\"&laquo;\"\n          />\n\n          {page > 2 && (\n            <>\n              <PaginationButton\n                page={1}\n                activePage={page}\n                onPageChange={onPageChange}\n              />\n              <span className=\"pagination__dots\">...</span>\n            </>\n          )}\n\n          {page > 1 && (\n            <PaginationButton\n              page={page - 1}\n              activePage={page}\n              onPageChange={onPageChange}\n            />\n          )}\n\n          <PaginationButton\n            page={page}\n            activePage={page}\n            onPageChange={onPageChange}\n          />\n\n          {page < lastPage && (\n            <PaginationButton\n              page={page + 1}\n              activePage={page}\n              onPageChange={onPageChange}\n            />\n          )}\n\n          {page < lastPage - 1 && (\n            <>\n              <span className=\"pagination__dots\">...</span>\n              <PaginationButton\n                page={lastPage}\n                activePage={page}\n                onPageChange={onPageChange}\n              />\n            </>\n          )}\n\n          <PaginationButton\n            page={page + 1}\n            activePage={page}\n            onPageChange={onPageChange}\n            text=\"&raquo;\"\n          />\n        </ul>\n      </nav>\n    );\n  }\n}\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst perPageOptions = [3, 6, 9, 12, 21];\n\nconst PaginationSettings = ({ value, handlePerPageQty }) => (\n  <div className=\"pagination__settings\">\n    <span>Items per page: </span>\n    <select value={value} onChange={e => handlePerPageQty(e.target.value)}>\n      {perPageOptions.map(option => (\n        <option key={option}>{option}</option>\n      ))}\n    </select>\n  </div>\n);\n\nPaginationSettings.propTypes = {\n  value: PropTypes.number.isRequired,\n  handlePerPageQty: PropTypes.func.isRequired,\n};\n\nexport default PaginationSettings;\n","import React from 'react';\nimport Pagination from './Components/Pagination/Pagination';\nimport PaginationSettings from './Components/Pagination/PaginationSettings';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst pages = new Array(99).fill(0).map((page, i) => i + 1);\n\nclass App extends React.Component {\n  state = {\n    page: 1,\n    perPage: 12,\n    total: pages.length,\n  };\n\n  setPage(newPage) {\n    const { page, perPage, total } = this.state;\n\n    if (\n      newPage === page\n      || newPage < 1\n      || newPage > Math.ceil(total / perPage)\n    ) {\n      return;\n    }\n\n    this.setState({ page: newPage });\n  }\n\n  onPageChange = (page) => {\n    this.setPage(page);\n  }\n\n  handlePerPageQty = (value) => {\n    if (value < 0 || value > 21) {\n      return;\n    }\n\n    this.setState({ perPage: +value });\n  }\n\n  render() {\n    const { perPage, page } = this.state;\n    const firstVisibleIndex = ((page - 1) * perPage) + 1;\n\n    return (\n      <div className=\"app\">\n        <h1>Pagination</h1>\n        <PaginationSettings\n          value={perPage}\n          handlePerPageQty={this.handlePerPageQty}\n        />\n        <ul className=\"content\">\n          {pages.slice(firstVisibleIndex - 1, firstVisibleIndex + perPage - 1)\n            .map(item => (\n              <li key={item} className=\"content__block\">{item}</li>\n            ))}\n        </ul>\n        <div className=\"content__pagination\">\n          <Pagination\n            total={pages.length}\n            perPage={perPage}\n            page={page}\n            onPageChange={this.onPageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}